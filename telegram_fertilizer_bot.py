import asyncio
import os
import logging
from aiogram import Bot, Dispatcher
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton
from aiogram.filters import Command
from aiogram.client.default import DefaultBotProperties
from dotenv import load_dotenv

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
load_dotenv()
TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(level=logging.INFO)

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–æ—Ç–∞
bot = Bot(token=TOKEN, default=DefaultBotProperties(parse_mode="HTML"))
dp = Dispatcher()

# –í–∞—Ä—ñ–∞–Ω—Ç–∏ –≤–∏–±–æ—Ä—É
crops = ["–ü—à–µ–Ω–∏—Ü—è", "–ö—É–∫—É—Ä—É–¥–∑–∞", "–°–æ–Ω—è—à–Ω–∏–∫", "–†—ñ–ø–∞–∫", "–Ø—á–º—ñ–Ω—å", "–°–æ—è"]
soil_types = ["–ß–æ—Ä–Ω–æ–∑–µ–º", "–°—ñ—Ä–æ–∑–µ–º", "–ü—ñ—â–∞–Ω–∏–π", "–ì–ª–∏–Ω–∏—Å—Ç–∏–π", "–°—É–ø—ñ—â–∞–Ω–∏–π"]
previous_crops = ["–ó–µ—Ä–Ω–æ–≤—ñ", "–ë–æ–±–æ–≤—ñ", "–¢–µ—Ö–Ω—ñ—á–Ω—ñ", "–û–≤–æ—á—ñ", "–ß–∏—Å—Ç–∏–π –ø–∞—Ä"]
moisture_zones = ["–ù–∏–∑—å–∫–∞", "–°–µ—Ä–µ–¥–Ω—è", "–î–æ—Å—Ç–∞—Ç–Ω—è"]

# –î–∞–Ω—ñ –ø—Ä–æ –¥–æ–±—Ä–∏–≤–∞ (–ø—Ä–∏–∫–ª–∞–¥)
fertilizer_data = {
    "–ü—à–µ–Ω–∏—Ü—è": {"NPK": "10-26-26", "Rate": "150-180 –∫–≥/–≥–∞"},
    "–ö—É–∫—É—Ä—É–¥–∑–∞": {"NPK": "16-16-16", "Rate": "200-250 –∫–≥/–≥–∞"},
    "–°–æ–Ω—è—à–Ω–∏–∫": {"NPK": "8-24-24", "Rate": "100-140 –∫–≥/–≥–∞"},
    "–†—ñ–ø–∞–∫": {"NPK": "12-24-12", "Rate": "180-220 –∫–≥/–≥–∞"},
    "–Ø—á–º—ñ–Ω—å": {"NPK": "10-20-20", "Rate": "140-170 –∫–≥/–≥–∞"},
    "–°–æ—è": {"NPK": "5-20-30", "Rate": "90-120 –∫–≥/–≥–∞"},
}

# –§—É–Ω–∫—Ü—ñ—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏
def create_keyboard(options):
    keyboard = [[KeyboardButton(text=option)] for option in options]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)

# –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≤–∏–±–æ—Ä—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
user_selection = {}

# –û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /start
@dp.message(Command("start"))
async def send_welcome(message: Message):
    user_selection[message.chat.id] = {}
    await message.answer("–í—ñ—Ç–∞—é! –û–±–µ—Ä—ñ—Ç—å –∫—É–ª—å—Ç—É—Ä—É:", reply_markup=create_keyboard(crops))

# –û–±—Ä–æ–±–Ω–∏–∫–∏ –≤–∏–±–æ—Ä—É
@dp.message()
async def handle_message(message: Message):
    user_id = message.chat.id
    text = message.text

    if text in crops:
        user_selection[user_id]["crop"] = text
        await message.answer(f"–í–∏ –æ–±—Ä–∞–ª–∏ –∫—É–ª—å—Ç—É—Ä—É: <b>{text}</b>. –¢–µ–ø–µ—Ä –≤–∏–±–µ—Ä—ñ—Ç—å —Ç–∏–ø “ë—Ä—É–Ω—Ç—É:", reply_markup=create_keyboard(soil_types))

    elif text in soil_types:
        user_selection[user_id]["soil"] = text
        await message.answer(f"–í–∏ –æ–±—Ä–∞–ª–∏ —Ç–∏–ø “ë—Ä—É–Ω—Ç—É: <b>{text}</b>. –¢–µ–ø–µ—Ä –≤–∏–±–µ—Ä—ñ—Ç—å –ø–æ–ø–µ—Ä–µ–¥–Ω–∏–∫:", reply_markup=create_keyboard(previous_crops))

    elif text in previous_crops:
        user_selection[user_id]["previous_crop"] = text
        await message.answer(f"–í–∏ –æ–±—Ä–∞–ª–∏ –ø–æ–ø–µ—Ä–µ–¥–Ω–∏–∫: <b>{text}</b>. –¢–µ–ø–µ—Ä –≤–∏–±–µ—Ä—ñ—Ç—å –∑–æ–Ω—É –∑–≤–æ–ª–æ–∂–µ–Ω–Ω—è:", reply_markup=create_keyboard(moisture_zones))

    elif text in moisture_zones:
        user_selection[user_id]["moisture"] = text
        await message.answer(f"–í–∏ –æ–±—Ä–∞–ª–∏ –∑–æ–Ω—É –∑–≤–æ–ª–æ–∂–µ–Ω–Ω—è: <b>{text}</b>. –†–æ–∑—Ä–∞—Ö–æ–≤—É—é –¥–æ–±—Ä–∏–≤–∞...")

        # –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –ø—Ä–æ –¥–æ–±—Ä–∏–≤–æ
        crop = user_selection[user_id].get("crop", "–ü—à–µ–Ω–∏—Ü—è")
        fertilizer = fertilizer_data.get(crop, {"NPK": "10-26-26", "Rate": "150 –∫–≥/–≥–∞"})

        # –õ–æ–≥—ñ–∫–∞ –∫–æ—Ä–∏–≥—É–≤–∞–Ω–Ω—è –Ω–æ—Ä–º–∏ –≤–Ω–µ—Å–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ —É–º–æ–≤
        rate = fertilizer["Rate"]
        if text == "–ù–∏–∑—å–∫–∞":
            rate = str(int(rate.split("-")[0]) - 10) + "-" + str(int(rate.split("-")[1]) - 10) + " –∫–≥/–≥–∞"
        elif text == "–î–æ—Å—Ç–∞—Ç–Ω—è":
            rate = str(int(rate.split("-")[0]) + 10) + "-" + str(int(rate.split("-")[1]) + 10) + " –∫–≥/–≥–∞"

        # –§–æ—Ä–º—É–≤–∞–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
        response = (
            f"‚úÖ <b>–†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–∞ –º–∞—Ä–∫–∞ –¥–æ–±—Ä–∏–≤:</b> {fertilizer['NPK']}\n"
            f"üí∞ <b>–†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–∞ –Ω–æ—Ä–º–∞:</b> {rate}\n"
            f"üå± <b>–í—Ä–∞—Ö–æ–≤–∞–Ω–æ:</b> –∫—É–ª—å—Ç—É—Ä–∞ {crop}, —Ç–∏–ø “ë—Ä—É–Ω—Ç—É {user_selection[user_id].get('soil', '-')}, "
            f"–ø–æ–ø–µ—Ä–µ–¥–Ω–∏–∫ {user_selection[user_id].get('previous_crop', '-')}, –∑–æ–Ω–∞ –∑–≤–æ–ª–æ–∂–µ–Ω–Ω—è {text}."
        )
        await message.answer(response, parse_mode="HTML")

# –§—É–Ω–∫—Ü—ñ—è –∑–∞–ø—É—Å–∫—É –±–æ—Ç–∞
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
